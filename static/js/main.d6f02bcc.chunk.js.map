{"version":3,"sources":["randomness1.jpg","randomness2.jpg","bg3.jpg","components/Header.js","web3Client.js","components/ImageCard.js","components/ImageCard2.js","static/features.js","components/BeaconFeatures.js","hook/useWindowPosition.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","useStyles","makeStyles","theme","root","display","justifyContent","alignItems","height","frontFamily","appbar","background","fontFamily","icon","color","fontSize","appbarTitle","flexGrow","appbarWrapper","width","margin","colorText","title","container","textAlign","initialcolorText","goDown","Header","classes","_useState","useState","_useState2","Object","slicedToArray","checked","setChecked","useEffect","react_default","a","createElement","className","id","AppBar","elevation","Toolbar","IconButton","FormatListNumbered_default","Collapse","assign","in","timeout","collapsedHeight","modules","to","smooth","ExpandMore_default","selectedAccount","hashContract","isInitialized","init","_ref","asyncToGenerator","regenerator_default","mark","_callee","provider","web3","hashABI","wrap","_context","prev","next","window","ethereum","request","method","then","accounts","console","log","concat","catch","err","on","Web3","eth","net","getId","sent","inputs","name","outputs","internalType","type","stateMutability","Contract","stop","apply","this","arguments","getBlockHash","_ref2","_callee2","_context2","abrupt","methods","extractor","call","maxWidth","media","fontWeight","desc","ImageCard","features","hash","sethash","tiemout","Card","CardMedia","image","RandomImage1","CardContent","Typography","gutterBottom","variant","component","description","parseInt","toString","Button","endIcon","Refresh_default","onClick","input","ImageCard2","valueRefMin","useRef","valueRefMax","minValue_local","maxValue_local","random_number_local","_useState3","_useState4","minValue","setminValue","_useState5","_useState6","maxValue","setmaxValue","_useState7","_useState8","random_number","set_random_number","RandomImage2","TextField","label","focused","inputRef","inputProps","style","Publish_default","current","value","rand_in_int","defineProperty","imageUrl","time","minHeight","BeaconFeatures","animation","setAnimation","useLayoutEffect","updatePosition","offetSetHeight","document","getElementById","offsetHeight","pageYOffset","addEventListener","removeEventListener","useWindowPosition","backgroundImage","Beacon","backgroundRepeat","backgroundSize","App","CssBaseline","reportWebVitals","onPerfEntry","Function","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.d6f02bcc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/randomness1.8e9d9757.jpg\";","module.exports = __webpack_public_path__ + \"static/media/randomness2.d1bad23c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg3.a35b9033.jpg\";","import React, { useEffect, useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, IconButton, Toolbar, Collapse } from '@material-ui/core';\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport { Link as Scroll } from 'react-scroll';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: \"center\",\n        height: \"100vh\",\n        frontFamily: 'Roboto',\n    },\n    appbar: {\n        background: 'none',\n        fontFamily: \"Roboto\",\n\n    },\n    icon: {\n        color: '#fff',\n        fontSize: '2em',\n    },\n    appbarTitle: {\n        flexGrow: '1',\n    },\n    appbarWrapper: {\n        width: \"80%\",\n        margin: '0 auto',\n    },\n    colorText: {\n        color: '#D8735E',    \n    },\n    title: {\n        color: '#fff',\n        fontSize: '4rem',\n\n    },\n    container: {\n        textAlign: 'center',\n    },\n    initialcolorText: {\n        color: '#C5C8CA',\n\n    },\n    goDown: {\n        color: '#D8735E',\n        fontSize: '4em',\n\n    }\n}));\nexport default function Header() {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(false);\n\n    useEffect(() =>{\n        setChecked(true);\n\n    }, []);\n\n    return <div className = {classes.root} id = \"header\">\n\n        <AppBar className = {classes.appbar} elevation = {0}>\n\n            <Toolbar className = {classes.appbarWrapper}>\n                <h1 className = {classes.appbarTitle}> Randomness <span className = {classes.colorText}> Beacon </span> </h1>\n\n                <IconButton>\n                    <FormatListNumberedIcon className = {classes.icon}/>\n                </IconButton>\n\n            </Toolbar>\n\n        </AppBar>\n\n        <Collapse in={checked}\n        { ...(checked ? { timeout: 1000}: {})}\n        collapsedHeight = {50}\n        >\n\n            <div className = {classes.container}>\n                <h1 className = {classes.title}> <span className = {classes.initialcolorText}> Publicly verifiable <br /> randomness </span> <span className = {classes.colorText}> beacon </span> \n                \n                </h1>\n\n                <Scroll to = \"beacon-features\" smooth = {true}>\n\n\n                    <IconButton>\n                        <ExpandMoreIcon className = {classes.goDown}/>\n\n                    </IconButton>\n\n                </Scroll>\n\n            </div>\n\n        </Collapse>\n        \n         </div>;\n}","import Web3 from 'web3';\n\nlet selectedAccount;\n\n// block header hash\nlet hashContract;\n\nlet isInitialized = false;\n\nexport const init = async () => {\n    let provider = window.ethereum;\n\n    if (typeof provider !== 'undefined') {\n        provider    \n            .request({ method: 'eth_requestAccounts' })\n            .then((accounts) => {\n                selectedAccount = accounts[0];\n                console.log(`Selected account is ${selectedAccount}`);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n\n        window.ethereum.on('accountsChanged', function (accounts) {\n            selectedAccount = accounts[0];\n            console.log(`Selected account changed to ${selectedAccount}`);\n        });\n    }\n\n    const web3 = new Web3(provider);\n\n    const networkID = await web3.eth.net.getId();\n\n    const hashABI = [\n        {\n            \"inputs\": [],\n            \"name\": \"extractor\",\n            \"outputs\": [\n                {\n                \"internalType\": \"bytes32\",\n                \"name\": \"\",\n                \"type\": \"bytes32\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        }\n    ];\n\n    hashContract = new web3.eth.Contract(\n        hashABI,\n        '0x69a928bca4a20c55145C04d44cd36e667c67D6ec'\n    );\n\n    isInitialized = true;\n\n}\n\nexport const getBlockHash = async () => {\n    if (!isInitialized) {\n        await init();\n    }\n    return hashContract.methods.extractor().call();\n}\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport RandomImage1 from '../randomness1.jpg';\nimport RandomImage2 from '../randomness2.jpg';\n\nimport { Collapse } from '@material-ui/core';\nimport { collectHashes, getBlockHash } from '../web3Client';\n\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 645,\n        background: \"rgba(0, 0, 0, 0.5)\",\n        margin: \"20px\",\n\n    },\n    media: {\n        height: 400,\n    },\n    title: {\n        fontFamily: \"Roboto\",\n        fontWeight: \"bold\",\n        fontSize: \"2rem\",\n        color: \"#fff\",\n    },\n    desc: {\n        fontFamily: \"Roboto\",\n        fontSize: \"1.1rem\",\n        color: '#ddd',\n\n    },\n});\n\nexport default function ImageCard ( { features, checked }) {\n\n    const classes = useStyles ();\n    const [hash, sethash] = useState(0);\n\n    const fetchHash = () => {\n        getBlockHash().then(hash => {\n            sethash(hash);\n        }).catch(err => {\n            console.log(err);\n        })\n\n        console.log(\"The type is: \", typeof hash);\n    };\n\n    return (\n\n\n        <Collapse in={checked} { ...(checked ? { tiemout: 1000} : {})}> \n            <Card className = {classes.root}>\n                \n            <CardMedia\n                className = {classes.media}\n                image = {RandomImage1}\n                title = {features.title}\n            />\n\n            <CardContent>\n                <Typography gutterBottom variant = \"h5\" component = \"h1\" className = {classes.title}>\n                    {features.title}\n                </Typography>\n\n                <Typography variant = \"body2\" color = \"textSecondary\" component = \"p\" className = {classes.desc}>\n                    {features.description}\n                </Typography>\n\n                <br />\n\n                <Typography variant = \"body2\" color = \"textSecondary\" component = \"p\" className = {classes.desc}>\n                    Random number in hex: {hash} <br />\n                    Random number integer: {parseInt(hash.toString(16), 16)}\n                    <br />\n\n                    <Button endIcon={<RefreshIcon />} variant = \"contained\" onClick = {() => {\n                        fetchHash();\n                    }\n                    }>\n\n                    Generate\n\n                    </Button>\n                </Typography>\n            </CardContent>\n                \n            </Card>\n\n        </Collapse>\n    );\n}\n\n","import React, { useRef, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport { TextField } from '@material-ui/core'\n\nimport PublishIcon from '@material-ui/icons/Publish';\n\nimport { getBlockHash } from '../web3Client';\n\nimport RandomImage1 from '../randomness1.jpg';\nimport RandomImage2 from '../randomness2.jpg';\n\nimport { Collapse } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 645,\n        background: \"rgba(0, 0, 0, 0.5)\",\n        margin: \"20px\",\n\n    },\n    media: {\n        height: 460,\n    },\n    title: {\n        fontFamily: \"Roboto\",\n        fontWeight: \"bold\",\n        fontSize: \"2rem\",\n        color: \"#fff\",\n    },\n    desc: {\n        fontFamily: \"Roboto\",\n        fontSize: \"1.1rem\",\n        color: '#ddd',\n\n    },\n    input: {\n        color: \"#000\",\n      },\n});\n\nexport default function ImageCard2 ( { features, checked }) {\n\n    const classes = useStyles ();\n\n    const valueRefMin = useRef('') //creating a refernce for TextField Component\n    const valueRefMax = useRef('')\n\n    let minValue_local = 0;\n    let maxValue_local = 0;\n\n    let random_number_local = 0;\n\n    const [hash, sethash] = useState(0);\n\n    const [minValue, setminValue] = useState(0);\n    const [maxValue, setmaxValue] = useState(0);\n    const [random_number, set_random_number] = useState(0);\n\n    const sendValue = () => {\n     //on clicking button accesing current value of TextField and outputing it to console \n\n        minValue_local = valueRefMin.current.value;\n        maxValue_local = valueRefMax.current.value;\n\n        setminValue(minValue_local);\n        setmaxValue(maxValue_local);\n\n    };\n\n    const fetchHash = () => {\n        getBlockHash().then(hash => {\n            sethash(hash);\n        }).catch(err => {\n            console.log(err);\n        })\n\n    };\n\n    const randNumberComputation = () => {\n        sendValue();\n        fetchHash();\n\n        const rand_in_int = parseInt(hash.toString(16), 16);\n        random_number_local = (rand_in_int % (maxValue - minValue)) + parseInt(minValue);\n\n        set_random_number(random_number_local);\n\n        console.log(random_number);\n\n    };\n\n    return (\n\n        <Collapse in={checked} { ...(checked ? { tiemout: 1000} : {})}>\n        \n            <Card className = {classes.root}>\n                \n            <CardMedia\n                className = {classes.media}\n                image = {RandomImage2}\n                title = {features.title}\n            />\n\n            <CardContent>\n                <Typography gutterBottom variant = \"h5\" component = \"h1\" className = {classes.title}>\n                    {features.title}\n                </Typography>\n\n                <Typography variant = \"body2\" color = \"textSecondary\" component = \"p\" className = {classes.desc}>\n                    {features.description}\n                </Typography>\n\n                <Typography variant = \"body2\" color = \"textSecondary\" component = \"p\" className = {classes.desc}>\n\n                    <TextField label=\"Min value\" color=\"secondary\" focused inputRef={valueRefMin} inputProps={{ style: { color: \"white\" } }} />\n                    <TextField label=\"Max value\" color=\"secondary\" focused inputRef={valueRefMax} inputProps={{ style: { color: \"white\" } }}/>\n\n                    <Button endIcon={<PublishIcon />} variant = \"contained\" onClick = {randNumberComputation}> \n                        Enter \n                    </Button>\n\n                    <br />\n\n                    Random number between {minValue} and {maxValue} is {random_number}\n                    \n\n                </Typography>\n            </CardContent>\n\n\n                \n            </Card>\n\n        </Collapse>\n    );\n}\n\n","const features = [\n    {\n      title: 'Live Randomness Feed',\n      description:\n        \"Feed gets updated with new random numbers every time a new Ethereum block is mined.\",\n      imageUrl: '../randomness1.jpg',  \n      time: 1500,\n      title: 'Live Randomness Feed',\n    },\n    {\n      title: 'Generate Randomness in Range',\n      description:\n        'Generate a random number in the range that you want, for whatever purpose you want.',\n      imageUrl: '../randomness2.jpg',   \n      time: 1500,\n      title: 'Generate random numbers',\n    },\n  ];\n  \n  export default features;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ImageCard from './ImageCard';\nimport ImageCard2 from './ImageCard2';\nimport features from \"../static/features\";\nimport useWindowPosition from '../hook/useWindowPosition';\n\nconst useStyles = makeStyles ((theme) => ({\n    root: {\n        minHeight: '70vh',\n        display: \"flex\",\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n\n}));\n\nexport default function () {\n    const classes = useStyles();\n\n    const checked = useWindowPosition('header');\n\n    return (\n        <div className = {classes.root} id = \"beacon-features\">\n\n            <ImageCard features = {features[0]} checked = {checked}/>\n            <ImageCard2 features = {features[1]} checked = {checked}/>\n\n        </div>\n    )\n}","import { useLayoutEffect, useState } from 'react';\n\nexport default function useWindowPosition(id) {\n  const [animation, setAnimation] = useState(false);\n\n  useLayoutEffect(() => {\n    function updatePosition() {\n      const offetSetHeight = window.document.getElementById(id).offsetHeight;\n      if (window.pageYOffset > offetSetHeight * 0.7) {\n        setAnimation(true);\n      }\n    }\n    window.addEventListener('scroll', updatePosition);\n    updatePosition();\n    return () => window.removeEventListener('scroll', updatePosition);\n  }, [id]);\n  return animation;\n}","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline } from '@material-ui/core';\n\nimport Beacon from './bg3.jpg';\n\nimport Header from './components/Header';\nimport BeaconFeatures from './components/BeaconFeatures'\n\nimport { init, getBlockHash } from './web3Client';\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        minHeight: '100vh',\n        backgroundImage: `url(${Beacon})`,\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: 'cover',\n    },\n\n}));\n\nexport default function () {\n    const classes = useStyles();\n\n    const [hash, sethash] = useState(0);\n    \n    useEffect(() => {\n        init();\n    }, []);\n\n    const fetchHash = () => {\n        getBlockHash().then(hash => {\n            sethash(hash);\n        }).catch(err => {\n            console.log(err);\n        })\n\n    };\n\n    return (\n        <div className = {classes.root}>\n            <CssBaseline />\n            <Header />\n            <BeaconFeatures />\n        </div>\n    )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}